---
themeVariables:
  fontSize: 10px
---

graph LR
    %% ===
    %% AUTHOR
    %% ---

    %% Attributes
    aid(<ins>author_id</ins>):::attr --- A
    af(first_name):::subAttr --- an
    al(last_name):::subAttr --- an
    an(name):::attr --- A
    aa(about):::attr --- A

    %% Author to Book
    %% 1..M : 0..M
    %% an Author can write one or more Books
    %% every Book is written by at least one Author
    A[Author]:::entity --- AB{Writes}:::relation
    AB === B[Book]:::entity
    %% ===

    %% ===
    %% GENRE
    %% ---

    %% Attributes
    gid(<ins>genre_id</ins>):::attr --- G
    gnm(name):::attr --- G

    %% Genre to Book
    %% 1..M : 0..1
    %% one Genre can contain one or more Books
    %% every Book belongs to one Genre
    %% workaround for reverse pointed arrows
    G[Genre]:::entity ~~~ GB{belong to}:::relation --> G
    %% Using this to attempt to "straighten" back out the lines
    GB ~~~ G
    GB === B
    %% ===

    %% ===
    %% SUBJECT
    %% ---

    %% Attributes
    sid(<ins>subject_id</ins>):::attr--- S
    sn(name):::attr--- S

    %% Subject to Book
    %% 0..M : 0..M
    %% a Subject can describe one or more Books
    %% a Book can be described by one or more Subjects
    S[Subject]:::entity --- SB{Describe}:::relation
    SB --- B
    %% ===

    %% ===
    %% LANGUAGE
    %% ---

    %% Attributes
    lid(<ins>lang_id</ins>):::attr--- L
    lnm(lang_name):::attr--- L

    %% Language to Book
    %% 1..M : 0..M
    %% one or more Languages can be used to write a Book
    %% a Book must be written in at least one Language
    L[Language]:::entity --- LB{Written}:::relation
    LB === B
    %% ===

    %% ===
    %% BOOK
    %% ---

    %% Attributes
    bid(<ins>book_id</ins>):::attr--- B
    bt(title):::attr--- B
    bf(fiction):::attr--- B
    be(edition):::attr--- B
    bp(pub_date):::attr--- B
    %% ===

    %% ===
    %% HOLD (Book to Cardholder, Bridge Entity)
    %% ---
    %% 0..M : 0..M

    %% Attributes
    H --- hts(timestamp):::attr
    H --- hst(status):::attr

    %% a Book may be requested for Hold by one or more Cardholder
    %% a Cardholder may request a Hold for one or more Book
    B ~~~ H{Hold}:::relation --- B
    H --- Ch
    %% ===

    %% ===
    %% COPY
    %% ---

    %% Book to Copy
    %% 1..1 : 0..M
    %% a book Book may have one or more Copy
    %% every Copy has exactly one Book
    B ~~~ BC{has}:::relation --> B
    BC ~~~ B
    BC === C[Copy]:::entity
    %% ===

    %% ===
    %% BORROW (Bridge Entity)
    %% ---
    %% 0..M : 0..M

    %% a Copy can have one or more Borrow records for one or more Cardholder
    %% a Cardholder can have one or more Borrow records for one or more Copy
    C --- Bw{Borrow}:::relation
    Bw --- Ch[Cardholder]:::entity

    %% Attributes
    Bw --- tts(in):::attr
    Bw --- tot(out):::attr
    Bw --- tdt(due_date):::derAttr

    %% COPY Attributes
    %% placed here to correct order of appearance in output
    C --- cid(<ins>copy_id</ins>):::attr
    %% ===

    %% ===
    %% CARDHOLDER
    %% ---

    %% Attributes
    Ch --- chid(<ins>cardholder_id</ins>):::attr
    Ch --- chnm(card_num):::attr
    chn --- chfn(first_name):::subAttr
    chn --- chln(last_name):::subAttr
    Ch --- chn(name):::attr
    Ch --- ca(address):::attr
    ca --- csn(street_number):::subAttr
    ca --- cst(street_name):::subAttr
    ca --- caa(apt_number):::subAttr
    ca --- cac(city):::subAttr
    ca --- cas(state):::subAttr
    ca --- cz(zip):::subAttr
    Ch --- chpw(password):::attr
    %% ===

    %% ===
    %% BRANCH
    %% ---

    %% Copy to Branch
    %% 0..M : 1..1
    %% a Copy must be located at exactly one Branch
    %% a Branch may have one or more Copy
    C ~~~ CBr{located at}:::relation === C
    CBr ~~~ C
    CBr --> Br[Branch]:::entity

    %% Attributes
    Br --- brd(<ins>branch_id</ins>):::attr
    Br --- bn(name):::attr
    Br --- ba(address):::attr
    ba --- bsn(street_number):::subAttr
    ba --- bst(street_name):::subAttr
    ba --- baa(apt_number):::subAttr
    ba --- bac(city):::subAttr
    ba --- bas(state):::subAttr
    ba --- bz(zip):::subAttr
    %% ===

    classDef entity fill:#c6e0b4;
    classDef relation fill:#9dc3e5;
    classDef attr fill:#fbf49b;
    classDef subAttr fill:#fbf49b, stroke:red;
    classDef derAttr fill:#fbf49b, stroke:red, stroke-dasharray: 10 5;
    %% optional attr links
    linkStyle 1,4,24,38,43,49,63 stroke:red, stroke-dasharray: 10 5;
